distance<- 10000000000000000000000000
val<- 0
for(i in 1:house_data.nrow()){
if(i!=j){
tempDist<-distm(c(house_data[j,18],house_data[j,17]),c(house_data[i,18],house_data[i,17]),fun=distHaversine)
if(tempDist<distance){
distance<-tempDist
val<- house_data[i,20]
}
}
}
house_data[i,20]<-val
}
for(j in naSqft_lot15){
distance<- 10000000000000000000000000
val<- 0
for(i in 1:nrow(house_data)){
if(i!=j){
tempDist<-distm(c(house_data[j,18],house_data[j,17]),c(house_data[i,18],house_data[i,17]),fun=distHaversine)
if(tempDist<distance){
distance<-tempDist
val<- house_data[i,20]
}
}
}
house_data[i,20]<-val
}
str(house_data)
for(j in naSqft_lot15){
distance<- 10000000000000000000000000
val<- 0
for(i in 1:nrow(house_data)){
if(i!=j){
tempDist<-distm(c(house_data[j,18],house_data[j,17]),c(house_data[i,18],house_data[i,17]),fun=distHaversine)
if(tempDist<distance){
distance<-tempDist
val<- house_data[i,20]
}
}
}
house_data[i,20]<-val
}
#zamiana zmiennej typu char "date" na zmienne liczbowe- kolejne miesiace
year_month <- c("2014 May", "2014 June", "2014 Jul", "2014 Aug", "2014 Sep", "2014 Oct", "2014 Nov", "2014 Dec",
"2015 Jan", "2015 Feb", "2015 Mar", "2015 Apr", "2015 May")
for (i in 1: length(year_month))
{
house_data$date <- replace(house_data$date, house_data$date == year_month[i], i)
}
house_data$date <- as.numeric(house_data$date)
unique(house_data$date) #sprawdzenie czy wszystko zostało poprawnie zamienione
dane$yr_renovated <- ifelse(dane$yr_renovated == 0, dane$yr_built, dane$yr_renovated)
house_data$yr_renovated <- ifelse(house_data$yr_renovated == 0, house_data$yr_built, house_data$yr_renovated)
numerical_numbers<- house_data[,c("date","bedrooms", "bathrooms", "sqft_living", "sqft_lot",
"floors","sqft_above","sqft_basement","yr_built",  "yr_renovated", "lat", "long"  )]
describe(numerical_numbers)
library(dplyr)
library(tidyr)
numerical_numbers<- house_data[,c("date","bedrooms", "bathrooms", "sqft_living", "sqft_lot",
"floors","sqft_above","sqft_basement","yr_built",  "yr_renovated", "lat", "long"  )]
describe(numerical_numbers)
library(dplyr)
library(psych)
library(dplyr)
install.packages("psych")
library(psych)
numerical_numbers<- house_data[,c("date","bedrooms", "bathrooms", "sqft_living", "sqft_lot",
"floors","sqft_above","sqft_basement","yr_built",  "yr_renovated", "lat", "long"  )]
describe(numerical_numbers)
# wykres pudełkowy
par(mfrow=c(5,4))
for (i in 1:length(zmienne_numeryczne)) {
boxplot(zmienne_numeryczne[,i], main=names(zmienne_numeryczne[i]), type="l")
}
# wykres pudełkowy
par(mfrow=c(5,4))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
# wykres pudełkowy
par(mfrow=c(5,4))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
#histogram
par(mfrow=c(5,4))
for (i in 1:length(numerical_numbers)) {
hist(numerical_numbers[,i], main=names(numerical_numbers[i]))
}
library(ggplot2)
# wykres pudełkowy
par(mfrow=c(5,4))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
# wykres pudełkowy
par(mfrow=c(2,2))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
#histogram
par(mfrow=c(2,2))
for (i in 1:length(numerical_numbers)) {
hist(numerical_numbers[,i], main=names(numerical_numbers[i]))
}
par(mfrow=c(3,2))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
par(mfrow=c(5,2))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
par(mfrow=c(2,4))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
par(mfrow=c(1,1))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
par(mfrow=c(2,2))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
par(mfrow=c(2,2))
for (i in 1:length(numerical_numbers)) {
boxplot(numerical_numbers[,i], main=names(numerical_numbers[i]), type="l")
}
#histogram
par(mfrow=c(2,2))
for (i in 1:length(numerical_numbers)) {
hist(numerical_numbers[,i], main=names(numerical_numbers[i]))
}
par(mfrow=c(2,2))
for (i in 1:length(scalar_variables)) {
boxplot(scalar_variables[,i], main=names(scalar_variables[i]), type="l")
}
scalar_variables <- house_data[, c("view", "condition", "grade")]
describe(scalar_variables)
# wykres pudełkowy
par(mfrow=c(2,2))
for (i in 1:length(scalar_variables)) {
boxplot(scalar_variables[,i], main=names(scalar_variables[i]), type="l")
}
#histogram
par(mfrow=c(2,2))
for (i in 1:length(scalar_variables)) {
hist(scalar_variables[,i], main=names(scalar_variables[i]))
}
#korelacja
correlationTable<- round(cor(numerical_variables,method="pearson"),,digits=4)
sapply(numerical_variables[], function(x) sd(x) / mean(x) * 100)
sapply(numerical_variables[], function(x) sd(x) / mean(x) * 100)
numerical_variables<- house_data[,c("date","bedrooms", "bathrooms", "sqft_living", "sqft_lot",
"floors","sqft_above","sqft_basement","yr_built",  "yr_renovated", "lat", "long"  )]
describe(numerical_variables)
library(ggplot2)
# wykres pudełkowy
par(mfrow=c(2,2))
for (i in 1:length(numerical_variables)) {
boxplot(numerical_variables[,i], main=names(numerical_variables[i]), type="l")
}
#histogram
par(mfrow=c(2,2))
for (i in 1:length(numerical_variables)) {
hist(numerical_variables[,i], main=names(numerical_variables[i]))
}
#wydzielenie zmiennych skalarnych
scalar_variables <- house_data[, c("view", "condition", "grade")]
describe(scalar_variables)
# wykres pudełkowy
par(mfrow=c(2,2))
for (i in 1:length(scalar_variables)) {
boxplot(scalar_variables[,i], main=names(scalar_variables[i]), type="l")
}
#histogram
par(mfrow=c(2,2))
for (i in 1:length(scalar_variables)) {
hist(scalar_variables[,i], main=names(scalar_variables[i]))
}
#korelacja
sapply(numerical_variables[], function(x) sd(x) / mean(x) * 100)
correlationTable<- round(cor(numerical_variables,method="pearson"),,digits=4)
correlationTable
# dodac korelacje
# dodac wspolczynnik zmiennosci
# podzial na zbior testowy
# hellwig
corPlot(numerical_variables, cex=0.8)
corPlot(numerical_variables, cex=0.4)
corPlot(numerical_variables, cex=0.9)
corPlot(numerical_variables, cex=0.6)
corPlot(numerical_variables, cex=0.7)
corPlot(numerical_variables, cex=0.8)
corPlot(numerical_variables, cex=1.8)
corPlot(numerical_variables, cex=1.8)
corPlot(numerical_variables, cex=0.8)
sapply(numerical_variables[], function(x) sd(x) / mean(x) * 100)
correlationTable<- round(cor(numerical_variables,method="pearson"),,digits=4)
#tablica korelacji zmiennych numerycznych
correlationTable
corPlot(numerical_variables, cex=0.8)
par(mfrow=c(4,4))
plot(numerical_variables[][,1],house_data[,"price"], xlab=names(numerical_variables[1]), ylab=names(house_data["price"]))
par(mfrow=c(2,2))
plot(numerical_variables[][,1],house_data[,"price"], xlab=names(numerical_variables[1]), ylab=names(house_data["price"]))
plot(numerical_variables[][,2],house_data[,"price"], xlab=names(numerical_variables[2]), ylab=names(house_data["price"]))
plot(numerical_variables[][,3],house_data[,"price"], xlab=names(numerical_variables[3]), ylab=names(house_data["price"]))
plot(numerical_variables[][,4],house_data[,"price"], xlab=names(numerical_variables[4]), ylab=names(house_data["price"]))
plot(numerical_variables[][,5],house_data[,"price"], xlab=names(numerical_variables[5]), ylab=names(house_data["price"]))
plot(numerical_variables[][,6],house_data[,"price"], xlab=names(numerical_variables[6]), ylab=names(house_data["price"]))
plot(numerical_variables[][,7],house_data[,"price"], xlab=names(numerical_variables[7]), ylab=names(house_data["price"]))
plot(numerical_variables[][,8],house_data[,"price"], xlab=names(numerical_variables[8]), ylab=names(house_data["price"]))
plot(numerical_variables[][,9],house_data[,"price"], xlab=names(numerical_variables[9]), ylab=names(house_data["price"]))
plot(numerical_variables[][,10],house_data[,"price"], xlab=names(numerical_variables[10]), ylab=names(house_data["price"]))
plot(numerical_variables[][,11],house_data[,"price"], xlab=names(numerical_variables[11]), ylab=names(house_data["price"]))
plot(numerical_variables[][,12],house_data[,"price"], xlab=names(numerical_variables[12]), ylab=names(house_data["price"]))
smp_size <- floor(0.8 * nrow(house_data))
set.seed(306511)
train_ind <- sample(seq_len(nrow(house_data)), size = smp_size)
train  <- dane[train_ind, ]
smp_size <- floor(0.8 * nrow(house_data))
set.seed(306511)
train_ind <- sample(seq_len(nrow(house_data)), size = smp_size)
train  <- house_data[train_ind, ]
test   <- house_data[-train_ind, ]
summary(train)
summary(test)
colnames(house_data[,1])
print(olnames(house_data[,1]))
print(colnames(house_data[,1]))
print(colnames(house_data))
correlations<- data.frame()
columns<-colnames(house_data)
noRows<- nrow(house_data)
correlations<- data.frame()
for( i  in columns){
correlations[i]<- c(0, noRows)
}
print(i)
columns<-colnames(house_data)
noRows<- nrow(house_data)
correlations<- data.frame()
for( i  in 2:20){
print(columns[i])
correlations[columns[i]]<- c(0, noRows)
}
columns<-colnames(house_data)
noRows<- nrow(house_data)
correlations<- data.frame()
for( i  in 2:20){
print(columns[i])
}
columns<-colnames(house_data)
noRows<- nrow(house_data)
correlations<- data.frame()
for( i  in 2:20){
print(columns[i])
correlations[columns[i]]<- c(1:noRows)*0
}
columns<-colnames(house_data)
noRows<- nrow(house_data)
correlations<- data.frame(columns[2]=c(1:noRows)*0)
correlations<- data.frame(matrix(0,nrow=noRows,ncol=19))
correlations
columns<-colnames(house_data)
noRows<- nrow(house_data)
correlations<- data.frame(matrix(0,nrow=noRows,ncol=noRows))
for(i in 2:20){
for(j in 2:i){
currentCor=cor(house_data[,i],house_data[,j])
correlations[i,j]=currentCor
}
}
correlations
for(i in 2:20){
for(j in 2:i){
currentCor=cor(house_data[,i],house_data[,j])
correlations[i-1,j-1]=currentCor
}
}
correlations
View(correlations)
View(correlations)
correlations<- data.frame(matrix(0,nrow=noRows,ncol=noRows))
noCol<- ncol(house_data)
correlations<- data.frame(matrix(0,nrow=noCol,ncol=noCol))
noCol<- ncol(house_data)
correlations<- data.frame(matrix(0,nrow=noCol,ncol=noCol))
for(i in 2:20){
for(j in 2:i){
currentCor=cor(house_data[,i],house_data[,j])
correlations[i-1,j-1]=currentCor
}
}
View(correlationTable)
correlationsWithPrice<- data.frame(matrix(0,nrow=1,ncol=noCol))
for(i in 2:20){
correlationsWithPrice[i-1,1]<-cor(house_data[,1],house_data[,i])
}
correlationsWithPrice
noCol<- ncol(house_data)
correlationsWithPrice<- data.frame(matrix(0,nrow=nCol-1,ncol=1))
noCol<- ncol(house_data)
correlationsWithPrice<- data.frame(matrix(0,nrow=noCol-1,noCol=1))
noCol<- ncol(house_data)
correlationsWithPrice<- data.frame(matrix(0,nrow=noCol-1,ncol=1))
for(i in 2:20){
correlationsWithPrice[i-1,1]<-cor(house_data[,1],house_data[,i])
}
correlationsWithPrice
correlatedWithPrice<-c()
index=1
for(i in 1:19){
if(correlationsWithPrice[1,i]>0.3){
correlatedWithPrice[index]<-correlationsWithPrice[1,i]
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
correlationsWithPrice[1,i]
if(correlationsWithPrice[1,i]>0.3){
correlatedWithPrice[index]<-correlationsWithPrice[1,i]
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
print(correlationsWithPrice[1,i])
if(correlationsWithPrice[1,i]>0.3){
correlatedWithPrice[index]<-correlationsWithPrice[1,i]
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
if(val>0.3){
correlatedWithPrice[index]<-correlationsWithPrice[1,i]
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
if(numeric(val) > numeric(0.3)){
correlatedWithPrice[index]<-correlationsWithPrice[1,i]
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
if(1> 0.3){
correlatedWithPrice[index]<-correlationsWithPrice[1,i]
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(length(val))
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(length(val))
print(length(0.3))
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(length(val))
print(length(numeric(0.3)))
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
columns<-colnames(house_data)
noCol<- ncol(house_data)
correlationsWithPrice<- data.frame(matrix(0,nrow=noCol-1,ncol=1))
for(i in 2:20){
correlationsWithPrice[i-1,1]<-cor(house_data[,1],house_data[,i])
}
correlationsWithPrice
#Najwieksza korelacja: (powyzej 0.5):4,11,18,3 (0.3-0.5):8,2  (podano numery kolumn)
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(length(val))
print(length(numeric(0.3)))
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
columns<-colnames(house_data)
noCol<- ncol(house_data)
correlationsWithPrice<- data.frame(matrix(0,nrow=noCol-1,ncol=1))
for(i in 2:20){
correlationsWithPrice[i-1,1]<-cor(house_data[,1],house_data[,i])
}
correlationsWithPrice
#Najwieksza korelacja: (powyzej 0.5):4,11,18,3 (0.3-0.5):8,2  (podano numery kolumn)
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(length(val))
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(length(as.numeric(val)))
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(val)
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(val)
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(val)
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(typeof(val))
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
correlatedWithPrice<-c()
index=1
for(i in 1:19){
val<-correlationsWithPrice[1,i]
print(typeof(val))
print(typeof(0.3))
if(val> 0.3){
correlatedWithPrice[index]<-i
index<-index+1
}
}
